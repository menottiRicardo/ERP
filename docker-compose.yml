version: "3"
services:
  auth:
    build:
      context: ./auth
      dockerfile: Dockerfile
    restart: on-failure
    ports:
      - "3001:3001"
    env_file:
      - ./auth/.env
    networks:
      - backend
    volumes:
      - ./auth:/app/auth
      - /app/auth/node_modules
    depends_on:
      - postgres
  mailer:
    build:
      context: ./mailer
      dockerfile: Dockerfile
    restart: on-failure
    env_file:
      - ./mailer/.env.dev
    networks:
      - backend
    volumes:
      - ./mailer:/app/mailer
      - /app/mailer/node_modules
    logging:
      driver: fluentd
      options:
        fluentd-async: "true"
        fluentd-address: localhost:24224
        tag: mailer-service
  files:
    build:
      context: ./files
      dockerfile: Dockerfile
    restart: on-failure
    ports:
      - "9003:9003"
    env_file:
      - ./files/.env.dev
    networks:
      - backend
    volumes:
      - ./files:/app/files
      - /app/files/node_modules
    logging:
      driver: fluentd
      options:
        fluentd-async: "true"
        fluentd-address: localhost:24224
        tag: files-service
  notification:
    build:
      context: ./notification
      dockerfile: Dockerfile
    restart: on-failure
    ports:
      - "9004:9004"
    env_file:
      - ./notification/.env.dev
    networks:
      - backend
    volumes:
      - ./notification:/app/notification
      - /app/notification/node_modules
    logging:
      driver: fluentd
      options:
        fluentd-async: "true"
        fluentd-address: localhost:24224
        tag: notification-service
  kong:
    build:
      context: ./kong
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "8000:8000"
      - "8001:8001"
      - "8443:8443"
    networks:
      - backend
    logging:
      driver: fluentd
      options:
        fluentd-async: "true"
        fluentd-address: localhost:24224
        tag: kong
  postgres:
    image: postgres
    restart: always
    container_name: postgres
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - backend
  rabbitmq:
    image: rabbitmq:3-management
    volumes:
      - rabbit_data:/var/lib/rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - backend
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - backend
    logging:
      driver: fluentd
      options:
        fluentd-async: "true"
        fluentd-address: localhost:24224
        tag: redis
  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - backend
    logging:
      driver: fluentd
      options:
        fluentd-async: "true"
        fluentd-address: localhost:24224
        tag: mongodb
networks:
  backend:
    driver: bridge
volumes:
  pg_data:
    driver: local
  rabbit_data:
    driver: local
  mongo_data:
    driver: local
